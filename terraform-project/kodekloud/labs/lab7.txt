Which argument should be used to explicitly set dependencies for a resource?
==> depends_on

Resource A relies on another Resource B but doesn't access any of its attributes in its own arguments. What is this type of dependency called?

==> explicit dependency

How do we make use of implicit dependency?

==> references expressions

In the configuration directory /root/terraform-projects/key-generator, create a file called key.tf with the following specifications:


Resource Type: tls_private_key

Resource Name: pvtkey

algorithm: RSA

rsa_bits: 4096


When ready, run terraform init, plan and apply.

If unsure, refer to the documentation.

resource "tls_private_key" "pvtkey" {
  algorithm = "RSA"
  rsa_bits = "4096"
}

Resource tls_private_key generates a secure private key and encodes it as PEM. It is a logical resource that lives only in the terraform state.

You can see the details of the resource, including the private key by running the terraform show command.

You can read the documentation for more details. https://registry.terraform.io/providers/hashicorp/tls/latest/docs/resources/private_key

Now, let's use the private key created by this resource in another resource of type local file. Update the key.tf file with the requirements:


Resource Name: key_details

File Name: /root/key.txt

Content: use a reference expression to use the attribute called private_key_pem of the pvtkey resource.


When ready, run terraform init, plan and apply.

resource "tls_private_key" "pvtkey" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

resource "local_file" "key_details" {
  content  = tls_private_key.pvtkey.private_key_pem
  filename = "/root/key.txt"
}

Within this directory, create two local_file type resources in main.tf file.


Resource 1:

Resource Name: whale

File Name: /root/whale

content: whale


Resource 2:

Resource Name: krill

File Name: /root/krill

content: krill


Resource called whale should depend on krill but do not use reference expressions.


When ready, run terraform init, plan and apply.


resource "local_file" "whale" {
  filename   = "/root/whale"
  content    = "whale"
  depends_on = [local_file.krill]
}
resource "local_file" "krill" {
  filename = "/root/krill"
  content  = "krill"
}





