What would be the output of the following program:


Note: add package and import statements as needed.

type Movie struct {
        name    string
        summary string
        rating  float32
}

func (m Movie) getSummary() {
        m.summary = "summary"
}

func (m *Movie) increaseRating() {
        m.rating += 1
}

func main() {
        mov := Movie{"xyz", "", 2.1}
        fmt.Printf("%+v", mov)
        mov.increaseRating()
        mov.getSummary()
        fmt.Printf("%+v", mov)
}
==> {name:xyz summary: rating:2.1}{name:xyz summary: rating:3.1}

What would be the output of the following program:


Note: add package and import statements as needed.

type Rectangle struct {
        length  int
        breadth int
}

func (r Rectangle) area() int {
        return r.length * r.breadth
}

func main() {
        r := Rectangle{breadth: 10, length: 5}
        fmt.Println(r.area())
        fmt.Println(r)
}
==> 50
   { 10 5}

What would be the output of the following program:


Note: add package and import statements as needed.

type Rectangle struct {
        length  int
        breadth int
}

func (r Rectangle) area() int {
        return r.length * r.breadth
}

func (r *Rectangle) incLength(n int) {
        for i := 0; i < n; i++ {
            r.length += i
        }
}

func main() {
        r := Rectangle{breadth: 10, length: 5}
        fmt.Println(r.area())
        fmt.Println(r)
        r.incLength(7)
        fmt.Println(r.area())
        fmt.Println(r)
}
==>  50 
    {5 10}
     260 
    {26 10}


What would be the output of the following program:


Note: add package and import statements as needed.

type Employee struct {
        eid int
        id  int
}

func main() {
        employees := make([]Employee, 5)
        for i := range employees {
                employees[i] = Employee{i, i + 10}
                fmt.Println(employees[i])
        }
}
==> {0 10}
    {1 11}
    {2 12}
    {3 13}
    {4 14}

What would be the output of the following program:


Note: add package and import statements as needed.

type Employee struct {
        eid int
        id  int
}

func (e Employee) get_id() int {
        return e.eid + 10
}

func main() {
        employees := make([]Employee, 5)
        for i := range employees {
                employees[i] = Employee{eid: i}
                employees[i].id = employees[i].get_id()
                fmt.Printf("%+v\n", employees[i])
        }
}
==> {eid:0 id:10}
    {eid:1 id:11}
    {eid:2 id:12}
    {eid:3 id:13}
    {eid:4 id:14}




